// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Data;

namespace Persistence.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20260801000000_AddRatingsTable")]
    partial class AddRatingsTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            // Existing model definitions will be here...

            modelBuilder.Entity("Domain.Entities.ClinicEntities.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("ClinicId")
                        .HasColumnType("int");

                    b.Property<int>("RatingValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId", "ClinicId")
                        .IsUnique();

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("Domain.Entities.ClinicEntities.Clinic", b =>
                {
                    // Existing properties...

                    b.Property<int>("RatingCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    // Relationships...
                });

            modelBuilder.Entity("Domain.Entities.ClinicEntities.Rating", b =>
                {
                    b.HasOne("Domain.Entities.ClinicEntities.Clinic", "Clinic")
                        .WithMany("Ratings")
                        .HasForeignKey("ClinicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("Domain.Entities.ClinicEntities.Clinic", b =>
                {
                    // Existing navigations...
                    b.Navigation("Ratings");
                });

#pragma warning restore 612, 618
        }
    }
} 